server:
  port: 8084

management:
  endpoints:
    web:
      exposure:
        include: '*'
  # For testing only
  security:
    enabled: false

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    # Client will store local copy of registry info (for load balancing on the client side)
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:localhost}:8761/eureka/

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/ostock_db
    username: myuser
    password: "{cipher}5b93bdffbbca22415e2ae4ba1e34b5e7ee4a0293324c16061dd3f23a0de1db4b"
  jpa:
    hibernate:
      ddl-auto: validate
    generate-ddl: false
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_HOST:keycloak}:7080/realms/organizations-realm
          # to start it independently
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

logging:
  level:
    root: DEBUG
    org:
      springframework.web: DEBUG
#      hibernate: ERROR
  pattern:
    console: "%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n"
