services:
  postgres:
    image: postgres:latest
    container_name: postgres-dev
    environment:
      POSTGRES_DB: "ostock_db"
      POSTGRES_USER: "myuser"
      POSTGRES_PASSWORD: "mypassword"
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./sql/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      retries: 5
#      start_period: 30s
      timeout: 10s
    networks:
      backend:
        aliases:
          - "postgres"

  config-server:
    build: ./config-server/
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "config-server"

  eureka-server:
    build: ./eureka-server/
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eureka-server"

  licensing-service:
    build: ./licensing-service/
    container_name: licensing-service
    ports:
      - "8081:8081"
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "licensing-service"

  organization-service:
    build: ./organization-service/
    container_name: organization-service
    depends_on:
#      postgres:
#        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
    ports:
      - "8084:8084"
    networks:
      backend:
        aliases:
          - "organization-service"

networks:
  backend:
    driver: bridge